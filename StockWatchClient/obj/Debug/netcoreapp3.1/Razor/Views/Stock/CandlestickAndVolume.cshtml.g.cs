#pragma checksum "C:\Users\Brijesh\source\repos\StockWatchRestApi\StockWatchClient\Views\Stock\CandlestickAndVolume.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "68faccfde2271f4d803350ecb3daa54052aa4d9f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Stock_CandlestickAndVolume), @"mvc.1.0.view", @"/Views/Stock/CandlestickAndVolume.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Brijesh\source\repos\StockWatchRestApi\StockWatchClient\Views\_ViewImports.cshtml"
using StockWatchClient;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Brijesh\source\repos\StockWatchRestApi\StockWatchClient\Views\_ViewImports.cshtml"
using StockWatchClient.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Brijesh\source\repos\StockWatchRestApi\StockWatchClient\Views\Stock\CandlestickAndVolume.cshtml"
using Highsoft.Web.Mvc.Stocks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Brijesh\source\repos\StockWatchRestApi\StockWatchClient\Views\Stock\CandlestickAndVolume.cshtml"
using Highsoft.Web.Mvc.Stocks.Rendering;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"68faccfde2271f4d803350ecb3daa54052aa4d9f", @"/Views/Stock/CandlestickAndVolume.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"25877a99044075accbedc626ef3858a883307bb4", @"/Views/_ViewImports.cshtml")]
    public class Views_Stock_CandlestickAndVolume : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<link rel=""stylesheet"" type=""text/css"" href=""https://code.highcharts.com/css/stocktools/gui.css"">
<link rel=""stylesheet"" type=""text/css"" href=""https://code.highcharts.com/css/annotations/popup.css"">
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js""></script>
<script src=""https://code.highcharts.com/stock/highstock.js""></script>
<script src=""https://code.highcharts.com/modules/timeline.js""></script>
<script src=""https://code.highcharts.com/modules/exporting.js""></script>
<script src=""https://code.highcharts.com/modules/accessibility.js""></script>
<script type=""text/javascript"">
    function formatYAxis() {
        return (this.value > 0 ? ' + ' : '') + this.value + '%';
    }
</script>

");
            WriteLiteral("\r\n");
#nullable restore
#line 18 "C:\Users\Brijesh\source\repos\StockWatchRestApi\StockWatchClient\Views\Stock\CandlestickAndVolume.cshtml"
   var chartOptions =
             new Highstock
             {
                 RangeSelector = new RangeSelector
                 {
                     Selected = 1
                 },
                 Title = new Title
                 {
                     Text = "Apple Stock Price"
                 },
                 Series = new List<Series>
                     {
                new CandleStickSeries
                {
                   Data = ViewBag.AppleData as List<CandleStickSeriesData>,
                   Name = "Apple Stock Price",
                   TurboThreshold = 10000,
                   Shadow = new Shadow
                   {
                       Enabled = true,

                   },
                   Tooltip = new CandleStickSeriesTooltip
                   {
                       ValueDecimals = 2
                   }
                }
                                             },
                 Navigator = new Navigator()
                 {
                     Series = new LineSeries
                     {
                         Data = ViewBag.NavigatorData as List<LineSeriesData>
                     }
                 }
             };

    chartOptions.ID = "chart";
    var renderer = new HighstockRenderer(chartOptions);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1>StockDetails</h1>\r\n\r\n\r\n");
#nullable restore
#line 63 "C:\Users\Brijesh\source\repos\StockWatchRestApi\StockWatchClient\Views\Stock\CandlestickAndVolume.cshtml"
Write(Html.Raw(renderer.RenderHtml()));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
#nullable restore
#line 67 "C:\Users\Brijesh\source\repos\StockWatchRestApi\StockWatchClient\Views\Stock\CandlestickAndVolume.cshtml"
      await Html.RenderPartialAsync("_ValidationScriptsPartial");

#line default
#line hidden
#nullable disable
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
